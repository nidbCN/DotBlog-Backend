// <auto-generated />
using System;
using DotBlog.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DotBlog.Server.Migrations
{
    [DbContext(typeof(DotBlogDbContext))]
    [Migration("20210202040241_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("DotBlog.Server.Entities.Article", b =>
                {
                    b.Property<Guid>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Alias")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("Category")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsShown")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Like")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PostTime")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Read")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ResourceUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("ArticleId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("DotBlog.Server.Entities.Reply", b =>
                {
                    b.Property<Guid>("ReplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Author")
                        .HasColumnType("TEXT");

                    b.Property<string>("AvatarUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<uint>("Like")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Link")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mail")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReplyTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ReplyTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("ResourceUri")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserExplore")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserPlatform")
                        .HasColumnType("TEXT");

                    b.HasKey("ReplyId");

                    b.HasIndex("ArticleId");

                    b.ToTable("Replies");
                });

            modelBuilder.Entity("DotBlog.Server.Entities.Reply", b =>
                {
                    b.HasOne("DotBlog.Server.Entities.Article", "Article")
                        .WithMany("Replies")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("DotBlog.Server.Entities.Article", b =>
                {
                    b.Navigation("Replies");
                });
#pragma warning restore 612, 618
        }
    }
}
